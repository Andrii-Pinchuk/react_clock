{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","start","setInterval","console","log","setState","this","clearInterval","props","clockName","React","Component","App","isClockVisible","hideClock","showClock","setRandomName","newRandomName","Math","ceil","random","prevState","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAAQC,sBAFvB,EAKEC,MAAQC,aAAY,WAElBC,QAAQC,KAAK,IAAIL,MAAQC,sBACzB,EAAKK,SAAS,CAAEP,MAAO,IAAIC,MAAQC,yBAClC,KATL,uDAWE,WACE,OAAOM,KAAKL,QAZhB,kCAeE,WACEM,cAAcD,KAAKL,SAhBvB,oBAmBE,WACE,IAAQH,EAASQ,KAAKT,MAAdC,KAER,OACE,qCACE,6BAAMQ,KAAKE,MAAMC,YACjB,8CAEG,IACAX,YA5BX,GAA2BY,IAAMC,WC6ClBC,E,4MA5Cbf,MAAQ,CACNgB,gBAAgB,EAChBJ,UAAW,O,EAGbK,UAAY,WACV,EAAKT,SAAS,CAAEQ,gBAAgB,K,EAGlCE,UAAY,WACV,EAAKV,SAAS,CAAEQ,gBAAgB,K,EAGlCG,cAAgB,WACd,IAAMC,EAAa,gBAAYC,KAAKC,KAAqB,GAAhBD,KAAKE,WAE9C,EAAKf,UAAS,SAACgB,GAIb,OAFAlB,QAAQC,IAAR,qCAA0CiB,EAAUZ,UAApD,eAAoEQ,IAE7D,CAAER,UAAWQ,O,4CAIxB,WACE,OACE,sBAAKK,UAAU,MAAf,UACIhB,KAAKT,MAAMgB,gBAAmB,cAAC,EAAD,CAAOJ,UAAWH,KAAKT,MAAMY,YAC7D,wBAAQc,KAAK,SAASC,QAASlB,KAAKS,UAApC,wBAIA,wBAAQQ,KAAK,SAASC,QAASlB,KAAKQ,UAApC,wBAIA,wBAAQS,KAAK,SAASC,QAASlB,KAAKU,cAApC,oC,GArCUN,IAAMC,WCPxBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b08c00e9.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  time: string,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: (new Date()).toLocaleTimeString(),\n  };\n\n  start = setInterval(() => {\n    // eslint-disable-next-line\n    console.log((new Date()).toLocaleTimeString());\n    this.setState({ time: (new Date()).toLocaleTimeString() });\n  }, 1000);\n\n  componentDidMount() {\n    return this.start;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.start);\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <>\n        <h1>{ this.props.clockName }</h1>\n        <p>\n          Current time:\n          {' '}\n          {time}\n        </p>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\ntype State = {\n  isClockVisible: boolean,\n  clockName: string,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 'New',\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  setRandomName = () => {\n    const newRandomName = `Clock ${Math.ceil(Math.random() * 10)}`;\n\n    this.setState((prevState) => {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevState.clockName} to ${newRandomName}`);\n\n      return { clockName: newRandomName };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {(this.state.isClockVisible) && <Clock clockName={this.state.clockName} />}\n        <button type=\"button\" onClick={this.showClock}>\n          Show clock\n        </button>\n\n        <button type=\"button\" onClick={this.hideClock}>\n          Hide clock\n        </button>\n\n        <button type=\"button\" onClick={this.setRandomName}>\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}